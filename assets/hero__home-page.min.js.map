{"version":3,"file":"hero__home-page.min.js","mappings":"AAEA","sources":["webpack://dawn-tailwind-starter/./src/js/hero__home-page.js"],"sourcesContent":["// * Manual Swiper Css Scroller\n// Idea came from here to make a manual scroller: https://chatgpt.com/c/2a0c3de0-9ecc-4ba9-bdf9-28159585ea65\ndocument.addEventListener('DOMContentLoaded', function () {\n  const scrollInnerElements = document.querySelectorAll('.hero-scroll-inner');\n\n  scrollInnerElements.forEach((scrollInner) => {\n    let isMouseDown = false;\n    let startX, scrollLeft, startY, scrollTop;\n\n    const startDragging = function (e) {\n      isMouseDown = true;\n      startX = e.pageX - scrollInner.offsetLeft;\n      scrollLeft = scrollInner.scrollLeft;\n      startY = e.pageY - scrollInner.offsetTop;\n      scrollTop = scrollInner.scrollTop;\n      scrollInner.classList.add('dragging');\n      e.preventDefault(); // Prevent default dragging behavior\n    };\n\n    const stopDragging = function () {\n      isMouseDown = false;\n      scrollInner.classList.remove('dragging');\n    };\n\n    const mouseMoveHandler = function (e) {\n      if (!isMouseDown) return;\n      e.preventDefault();\n      const x = e.pageX - scrollInner.offsetLeft;\n      const walkX = (x - startX) * 2; // Multiply by 2 for faster scrolling\n      scrollInner.scrollLeft = scrollLeft - walkX;\n\n      const y = e.pageY - scrollInner.offsetTop;\n      const walkY = (y - startY) * 2; // Multiply by 2 for faster scrolling\n      scrollInner.scrollTop = scrollTop - walkY;\n    };\n\n    // Mouse events\n    scrollInner.addEventListener('mousedown', startDragging);\n    scrollInner.addEventListener('mouseleave', stopDragging);\n    scrollInner.addEventListener('mouseup', stopDragging);\n    scrollInner.addEventListener('mousemove', mouseMoveHandler);\n\n    // Touch events\n    scrollInner.addEventListener('touchstart', (e) => {\n      const touch = e.targetTouches[0];\n      startX = touch.pageX - scrollInner.offsetLeft;\n      scrollLeft = scrollInner.scrollLeft;\n      startY = touch.pageY - scrollInner.offsetTop;\n      scrollTop = scrollInner.scrollTop;\n      isMouseDown = true;\n      scrollInner.classList.add('dragging');\n    });\n\n    scrollInner.addEventListener('touchend', () => {\n      isMouseDown = false;\n      scrollInner.classList.remove('dragging');\n    });\n\n    scrollInner.addEventListener('touchmove', (e) => {\n      if (!isMouseDown) return;\n      const touch = e.targetTouches[0];\n      const x = touch.pageX - scrollInner.offsetLeft;\n      const walkX = (x - startX) * 2; // Multiply by 2 for faster scrolling\n      scrollInner.scrollLeft = scrollLeft - walkX;\n\n      const y = touch.pageY - scrollInner.offsetTop;\n      const walkY = (y - startY) * 2; // Multiply by 2 for faster scrolling\n      scrollInner.scrollTop = scrollTop - walkY;\n    });\n\n    // Prevent default behavior on images\n    const images = scrollInner.querySelectorAll('img');\n    images.forEach((img) => {\n      img.addEventListener('dragstart', function (e) {\n        e.preventDefault();\n      });\n    });\n  });\n});\n\n/* import Swiper from '../../node_modules/swiper/swiper-bundle.min.mjs';\n\n// import Swiper from '../../node_modules/swiper/swiper-bundle.min.mjs'\nimport { Pagination, EffectCards, A11y, EffectCoverflow } from 'swiper/modules';\n\n// Define base configuration for Mobile Hero Swiper\n// Inspired by https://codepen.io/kristen17/pen/ExpZXLz & i like this for the future: https://codepen.io/sandhya_subram/pen/KKVxWgd & https://codepen.io/shamim539/pen/vdaqQG\nconst mobileSwiperConfig = { \n  module: [ Pagination, EffectCoverflow, A11y ],\n  grabCursor: true,\n  centeredSlides: true,\n  allowTouchMove: true,\n  slidesPerView: \"auto\",\n  effect: \"coverflow\",\n  coverflowEffect: {\n    rotate: 5,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n  },\n  initialSlide: 1,\n  spaceBetween: 40,\n  loop: true,\n  speed: 1200,\n  autoplay: { delay: 4000 },\n  // lazyPreloaderClass: \"swiper-lazy-preloader\",\n  // lazyPreloadPrevNext: 1,\n  pagination: {\n    el: \".swiper-pagination\", \n    clickable: true,\n    type: 'bullets',\n  },\n  breakpoints: {\n    0: {\n      autoplay: { delay: 4000 },\n      spaceBetween: 25\n    },\n    481: {\n      spaceBetween: 40\n    },\n    600: {\n      spaceBetween: 50\n    },\n    // Stop's auto play on large screens to save resources\n    990: {\n      autoplay: false,\n    }\n  },\n  a11y: true,\n  on: {\n    init: function () {\n      // console.log('swiper initialized');\n      const elements = document.querySelectorAll('.hero__swiper--sm .swiper-slide');\n      elements.forEach((element) => {\n        element.classList.add('hero_slider_loaded');\n      });\n      const firstSlideElement = document.querySelectorAll('.hero_first_slide_sm');\n      firstSlideElement.forEach((element) => {\n        element.classList.remove('hero_first_slide_sm');\n      });\n      const notFirstSlideElement = document.querySelectorAll('.hero_not_first_slide_sm');\n      notFirstSlideElement.forEach((element) => {\n        element.classList.remove('hero_not_first_slide_sm');\n      });\n    },\n  },\n};\n\n// Define base configuration for Desktop Hero Swiper \nconst largeSwiperConfig = {\n  module: [ Pagination, EffectCards, A11y ],\n  spaceBetween: 10,\n  speed: 1200,\n  initialSlide: 1,\n  autoplay: { delay: 4000 },\n  // No autoplay set be default so no extra resources are being used on smaller screens where this swiper is not visable\n  // Starts auto play on large screens to create effect\n  breakpoints: {\n    0: {\n      autoplay: false\n    },\n    990: {\n      autoplay: { delay: 4000 }\n    }\n  },\n  loop: true,\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 1,\n  loopedSlides: 2,\n  updateOnWindowResize: true,\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n    type: 'bullets',\n  },\n  effect: 'cards',\n  cardsEffect: {\n    perSlideOffset: 6,\n    perSlideRotate: 2,\n    rotate: true,\n    slideShadows: true,\n  },\n  a11y: true,\n  on: {\n    init: function () {\n      // console.log('swiper initialized');\n      const elements = document.querySelectorAll('.hero__swiper--lg .swiper-slide');\n      elements.forEach((element) => {\n        element.classList.add('hero_slider_loaded');\n      });\n      const firstSlideElement = document.querySelectorAll('.hero_first_slide_lg');\n      firstSlideElement.forEach((element) => {\n        element.classList.remove('hero_first_slide_lg');\n      });\n      const notFirstSlideElement = document.querySelectorAll('.hero_not_first_slide_lg');\n      notFirstSlideElement.forEach((element) => {\n        element.classList.remove('hero_not_first_slide_lg');\n      });\n      // Remove this last as it's overflow hidden so we know all the other styles have been applied at this point\n      const lgSliderElement = document.querySelectorAll('.hero__swiper--onload-o-hidden');\n      lgSliderElement.forEach((element) => {\n        setTimeout(() => {\n          element.classList.remove('hero__swiper--onload-o-hidden');\n        }, 100);\n      });\n    },\n  },\n};\n\n// Initializes the Swiper sliders\nconst initSwipers = () => {\n  new Swiper(\".hero__swiper--sm\", mobileSwiperConfig);\n  new Swiper(\".hero__swiper--lg\", largeSwiperConfig);\n};\n\n// Wait for the DOM to fully load before initializing the Swiper sliders\ndocument.addEventListener('DOMContentLoaded', () => {\n  initSwipers();\n}); */\n"],"names":[],"sourceRoot":""}