{%- liquid
  assign show_images_on_mobile = section.settings.show_images_on_mobile
  assign animate_scroll = false
  if section.settings.animations_reveal_on_scroll
    if section.settings.animations_reveal_on_scroll_hp_only and template.name == 'index'
      assign animate_scroll = true
      unless section.settings.animations_reveal_on_scroll_hp_only
        assign animate_scroll = true
      endunless
    endif
  endif
-%}
{%- style -%}
  .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
          padding-top: {{ section.settings.padding_top }}px;
          padding-bottom: {{ section.settings.padding_bottom }}px;
      }
  }

  {% if section.settings.border_on_top or section.settings.border_on_bottom %}
    #section-{{ section.id }} {
        border-color: rgba(var(--color-foreground), 0.06);
    }
  {% endif %}
  {% comment %}
  #sub-menu-outer-wrap{
    position: relative;
  }
  #sub-menu-outer-wrap:after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 10px;
      height: 100%;
      background: linear-gradient(90deg, rgba(var(--color-background), 0) 0%, rgba(var(--color-background), 1) 100%);
      pointer-events: none;
      z-index: 1;

  }
  {% endcomment %}
  .submenu__inner-wrapper {
    {% if show_images_on_mobile %}
      --gap-spacing: 1rem;
    {% else %}
      --gap-spacing: 2rem;
    {% endif %}
    gap: var(--gap-spacing);
  }
  .submenu__item {
    {% if show_images_on_mobile %}
      --item-width: calc((100% - (var(--gap-spacing) * 4)) / 5); /* 5 items, 4 gaps */
      width: var(--item-width);
      flex-basis: var(--item-width);
    {% else %}
      width: auto;
      flex-basis: content;
    {% endif %}
      color: rgba(var(--color-foreground), 0.75);
      transition: all var(--duration-short) ease;
  }

  .submenu__item:last-child {
      margin-right: 0; /* Remove the gap for the last item */
  }

  .submenu__item:hover {
      color: rgb(var(--color-foreground));
  }

  .submenu__item:hover .submenu__badge {
      background-color: rgba(var(--color-button), 0.95);
      background-color: color-mix(in srgb, rgb(var(--color-button)), black 5%);
  }
  {% if show_images_on_mobile %}
  .submenu__item-image {
      border: 0.25rem solid rgba(var(--color-foreground), 0.75);
      transition: all var(--duration-short) ease;
  }

  .submenu__item-image:hover {
      border: 0.1rem solid rgba(var(--color-foreground), 0.75);
  }
  {% endif %}

  .submenu__badge {
      background-color: rgb(var(--color-button));
      color: rgb(var(--color-button-text));
      padding: 0.1rem 0.45rem;
      text-shadow: 2px 0px 2px rgba(0,0,0,0.11);
  }

  .submenu__item-text {
      line-height: calc(1 + 0.3 / var(--font-body-scale));
  }
  @media screen and (min-width: 990px) {
    .submenu__wrapper {
      --gap-spacing: 3rem;
    }
    .submenu__item {
      width: auto;
      flex-basis: content;
    }
    .submenu__item-image {
      border: 1rem;
    }
  }
{%- endstyle -%}
<div
  id='section-{{ section.id }}'
  class='section-{{ section.id }}-padding color-{{ section.settings.color_scheme }} gradient {% if section.settings.border_on_top %} tw-border-t {% endif %}{% if section.settings.border_on_bottom %} tw-border-b {% endif %}'
>
  <div class='page-width'>
    <div id='submenu__outer-wrap' class=''>
      <div class='submenu__inner-wrapper tw-mx-auto tw-flex tw-flex-wrap tw-shrink-0 tw-grow tw-justify-center tw-items-start'>
        {%- for block in section.blocks -%}
          <a
            href='{{ block.settings.link }}'
            class='submenu__item tw-relative tw-text-center lg:tw-text-left tw-flex tw-flex-col lg:tw-flex-row tw-gap-3 tw-items-center tw-justify-center{% if animate_scroll %} scroll-trigger animate--slide-in{% endif %}'
            {{ block.shopify_attributes }}
            {% if animate_scroll %}
              data-cascade
              style='--animation-order: {{ forloop.index }};'
            {% endif %}
          >
            {%- if show_images_on_mobile and block.settings.image != blank -%}
              <div class='lg:tw-hidden lg:tw-h-8 tw-flex tw-items-center tw-justify-center tw-aspect-square tw-w-full tw-h-full'>
                <img
                  srcset='
                    {% if block.settings.image.width >= 350 %}{{ block.settings.image | image_url: width: 350 }} 350w,{% endif %}
                    {% if block.settings.image.width >= 750 %}{{ block.settings.image | image_url: width: 750 }} 750w,{% endif %}
                    {{ block.settings.image | image_url }} {{ block.settings.image }}w
                  '
                  sizes='(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px) calc(100vw - 10rem), 100vw'
                  src='{{ block.settings.image | image_url: width: 750 }}'
                  loading='lazy'
                  fetchpriority='high'
                  width='{{ block.settings.image.width }}'
                  height='{{ block.settings.image.height }}'
                  alt='{{ block.settings.image.alt | escape }}'
                  class='submenu__item-image tw-w-full tw-h-full tw-rounded-full tw-object-cover tw-aspect-square'
                >
              </div>
            {%- endif -%}
            {%- liquid
              assign text_classes = 'submenu__item-text tw-font-semibold tw-text-smd tw-text-center'
              assign badge_classes = 'submenu__badge tw-mr-3 tw-text-xs tw-font-bold tw-uppercase tw-rounded tw-px-2 tw-py-1'
              if show_images_on_mobile
                assign text_classes = 'submenu__item-text tw-font-semibold tw-text-sm md:tw-text-smd'
                assign badge_classes = 'submenu__badge tw-absolute lg:tw-relative tw-m-0 lg:tw-mr-3 tw-top-1 lg:tw-top-[-1px] tw-right-0  tw-text-xs tw-font-bold tw-uppercase tw-rounded tw-px-2 tw-py-1'
              endif
            -%}
            <span class='{{ text_classes }}'>
              {% comment %}
                If we are showing images on mobile we need to add the below classes to the badge
              {% endcomment %}
              {%- if block.settings.badge_text != blank -%}
                <span class='{{ badge_classes }}'>
                  {{- block.settings.badge_text -}}
                </span>
              {%- endif -%}
              {{ block.settings.text }}
            </span>
          </a>
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.submenu.name",
  "class": "submenu",
  "enabled_on": {
    "groups": ["header"]
  },
  "max_blocks": 5,
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-2"
    },
    {
      "type": "checkbox",
      "id": "animations_reveal_on_scroll",
      "label": "t:sections.all.animations_reveal_on_scroll.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "animations_reveal_on_scroll_hp_only",
      "label": "t:sections.all.animations_reveal_on_scroll_hp_only.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_images_on_mobile",
      "label": "t:sections.submenu.settings.show_images_on_mobile.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "border_on_top",
      "label": "t:sections.all.border_on_top.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "border_on_bottom",
      "label": "t:sections.all.border_on_bottom.label",
      "default": false
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 10
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 10
    }
  ],
  "blocks": [
    {
      "type": "submenu_item",
      "name": "t:sections.submenu.blocks.submenu_item.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "t:sections.submenu.blocks.submenu_item.settings.text.label",
          "default": "Menu item"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.submenu.blocks.submenu_item.settings.link.label"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.submenu.blocks.submenu_item.settings.image.label"
        },
        {
          "type": "text",
          "id": "badge_text",
          "label": "t:sections.submenu.blocks.submenu_item.settings.badge_text.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.submenu.presets.name"
    }
  ]
}
{% endschema %}
